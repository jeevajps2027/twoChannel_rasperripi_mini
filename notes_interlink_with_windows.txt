1. Edit the hostname file:
    sudo nano /etc/hostname

    it contains  ----->    raspberrypi
    changed the host name ------->  pi-client-1



2. Edit the hosts file:

        sudo nano /etc/hosts

    Change the line:

        127.0.1.1       raspberrypi
    to:
        127.0.1.1       pi-client-1

And 
    sudo reboot


this change the hostname of the rasperripi

-------------------------------------------------------------------------------------------------------
 Expose SQLite DB via Samba from Raspberry Pi

  1. Install Samba
    sudo apt update
    sudo apt install samba

 2.ADD PASSWORD FOR THE USER sai
    sudo smbpasswd -a sai

    It will ask for a password — use the same one you’ll enter in Windows (example: sai@123)








2.Edit Samba config
    sudo nano /etc/samba/smb.conf

    Add at the bottom:

       [four_channel_db]
        path = /home/sai/Desktop/rasperri_sevenCh/four_channel
        valid users = sai
        browseable = yes
        writable = yes
        guest ok = no
        read only = no

3. Restart Samba
    sudo systemctl restart smbd

4: Set Folder Permissions
    sudo chown -R sai:sai /home/sai/Desktop/rasperri_sevenCh/four_channel
    sudo chmod -R 755 /home/sai/Desktop/rasperri_sevenCh/four_channel



--------------------------------- WINDOWS CODE  ------------------------------------------

Step 5: Connect from Windows

    Press Win + R

    Type: \\raspberrypi\four_channel_db
  

    Username: sai

    Password: (what you set using smbpasswd -a sai)

    You can check "Remember credentials" so you don’t get asked every time.

step 6 :
    Z: folder create 
        file explorer ---> right click to pc ----> click Map Network Drive 
            ----> choose any drive Z,Y ----->connect \\raspberrypi\four_channel_db



def map_network_drive():
    # net.exe location on Windows system
    net_path = r'C:\Windows\System32\net.exe'  # must point to net.exe, NOT user folder

    del_cmd = f'cmd /c "{net_path} use Z: /delete /yes"'
    map_cmd = f'cmd /c "{net_path} use Z: \\\\raspberrypi\\four_channel_db /user:sai sai@123 /persistent:yes"'

    print("Deleting existing Z: mapping (if any)...")
    res_del = subprocess.run(del_cmd, shell=True)
    if res_del.returncode != 0:
        print("Warning: Failed to delete existing Z: mapping or it did not exist.")

    print("Mapping Z: drive to \\\\raspberrypi\\four_channel_db ...")
    res_map = subprocess.run(map_cmd, shell=True)
    if res_map.returncode != 0:
        print("Error: Failed to map Z: drive. Please check your credentials and network path.")
        sys.exit(1)
    print("Z: drive mapped successfully.")







DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

client_db_path = 'Z:/db.sqlite3'
if os.path.exists(client_db_path):
    DATABASES['client_db'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': client_db_path,
    }
else:
    print("⚠️ Warning: Z: drive not connected. client_db not available.")











windows activate
1. SQLServerManager16.msc
        sql server network configuration
        sql server services-----> running 

2.services.msc
        sql seerver(MSSQLSERVER)
        SQL BROWSER these are all must be running

3. windows defender firewall
        inbound rules -----> new rules -----. port next next 1433as like (tcp udp)
    
4.control pannnel----->netwoork and sharing ----> change advance sharinbg setting -----> on file and printer sharing 






ethernet value:

    sudo ip addr add 192.168.137.220/24 dev eth0
    sudo ip link set eth0 up


odbc free tds

    sudo apt update
    sudo apt install unixodbc-dev freetds-dev freetds-bin tdsodbc -y
    pip install django-pyodbc-azure   # or mssql-django (preferred, newer)


    for check -----> odbcinst -q -d

Step 2: Configure FreeTDS
    sudo nano /etc/freetds/freetds.conf

    [SSMS]
    host = 192.168.137.1   # your Windows IP
    port = 1433
    tds version = 7.4


Step 3: Add ODBC driver entry
    sudo nano /etc/odbcinst.ini

    [FreeTDS]
    Description = FreeTDS unixODBC Driver
    Driver = /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
    Setup  = /usr/lib/arm-linux-gnueabihf/odbc/libtdsS.so
    UsageCount = 1

    Check path with:
        ls /usr/lib/arm-linux-gnueabihf/odbc/


IF ERROR OCCURE :
    dpkg -L tdsodbc | grep .so

    You should see something like:

        /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
        (or /usr/lib/aarch64-linux-gnu/odbc/libtdsodbc.so if 64-bit OS).

    Update /etc/odbcinst.ini

        sudo nano /etc/odbcinst.ini

        [FreeTDS]
        Description = FreeTDS ODBC Driver for SQL Server
        Driver      = /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
        Setup       = /usr/lib/arm-linux-gnueabihf/odbc/libtdsS.so

    3. Define DSN in /etc/odbc.ini

        sudo nano /etc/odbc.ini

        ADD
            [SSMS]
            Driver   = FreeTDS
            Server   = 192.168.137.1
            Port     = 1433
            TDS_Version = 7.4
            Database = YourDBName

    4. Test connection

        isql -v SSMS gauge gauge@9999

        +---------------------------------------+
        | Connected!                            |
        |                                       |
        | sql-statement                         |
        | help [tablename]                      |
        | quit                                  |
        +---------------------------------------+

//////////////////////////////////////////////////////
Fix static IP config
    sudo nano /etc/dhcpcd.conf

interface eth0
static ip_address=192.168.8.220/24
static routers=192.168.8.2
static domain_name_servers=8.8.8.8 8.8.4.4
metric 100

interface wlan0
metric 600


    sudo systemctl restart dhcpcd
///////////////////////////////////////////////////////////////////// this is not work////////////


sudo nmcli con mod "eth0-dhcp" ipv4.addresses 192.168.137.220/24
sudo nmcli con mod "eth0-dhcp" ipv4.gateway 192.168.137.1
sudo nmcli con mod "eth0-dhcp" ipv4.dns "8.8.8.8 8.8.4.4"
sudo nmcli con mod "eth0-dhcp" ipv4.method manual



sudo nmcli con up "eth0-dhcp"


ip addr show eth0
ip route


Expected: as like it display
    inet 192.168.137.220/24 ...
    default via 192.168.137.1 dev eth0






    

